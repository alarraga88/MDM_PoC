/* tslint:disable */
/* eslint-disable */
/**
 * Mock Entities API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  Currency,
  Language,
  Location,
} from '../models/index';
import {
    CurrencyFromJSON,
    CurrencyToJSON,
    LanguageFromJSON,
    LanguageToJSON,
    LocationFromJSON,
    LocationToJSON,
} from '../models/index';

/**
 * 
 */
export class DefaultApi extends runtime.BaseAPI {

    /**
     * Get all currencies
     */
    async currenciesGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Currency>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/currencies`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(CurrencyFromJSON));
    }

    /**
     * Get all currencies
     */
    async currenciesGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Currency>> {
        const response = await this.currenciesGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * Get all languages
     */
    async languagesGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Language>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/languages`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(LanguageFromJSON));
    }

    /**
     * Get all languages
     */
    async languagesGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Language>> {
        const response = await this.languagesGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * Get all locations
     */
    async locationsGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Location>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/locations`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(LocationFromJSON));
    }

    /**
     * Get all locations
     */
    async locationsGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Location>> {
        const response = await this.locationsGetRaw(initOverrides);
        return await response.value();
    }

}
